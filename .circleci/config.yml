version: 2
jobs:
  test:
    working_directory: ~/circle
    docker:
      - image: ministryofjustice/ruby:2.5.1
        environment:
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: root
          DATABASE_URL: postgresql://root@localhost/fb-pusblisher_test
      - image: circleci/postgres:10.6-alpine-ram
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle-test_test
    steps:
      - checkout
      - run:
          name: bundle install
          command: 'bundle install --deployment --jobs=2 --retry 3 --without development'
      - run:
          name: setup database
          command: 'RAILS_ENV=test bundle exec rake db:create db:schema:load'
      - run:
          name: test
          command: 'bundle exec rspec'
  build_and_deploy_to_test:
    working_directory: ~/circle/git/fb-publisher
    docker:
      - image: asmega/fb-builder:latest
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "34:fd:9e:ad:18:04:69:2c:c7:5c:9f:25:82:84:6d:38"
      - run:
          name: checkout fb-publisher-deploy
          command: "GIT_SSH_COMMAND='ssh -v -i ~/.ssh/id_rsa_34fd9ead1804692cc75c9f2582846d38 -o \"IdentitiesOnly=yes\"' git clone git@github.com:ministryofjustice/fb-publisher-deploy.git ~/circle/git/fb-publisher-deploy"
      - run:
          name: persist git crypt key to disk
          command: "echo $ENCODED_GIT_CRYPT_KEY | base64 -d > /root/circle/git_crypt.key"
      - run:
          name: unlock git crypt
          command: "cd ~/circle/git/fb-publisher-deploy && git-crypt unlock /root/circle/git_crypt.key"
      - run:
          name: npm install
          command: 'npm install'
      - setup_remote_docker
      - run:
          name: build and push docker images
          command: './scripts/circleci_build.sh test'
      - run:
          name: deploy to test
          command: './scripts/circleci_deploy.sh test $KUBE_TOKEN_TEST'
  build_and_deploy_to_integration:
    working_directory: ~/circle/git/fb-publisher
    docker:
      - image: asmega/fb-builder:latest
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "34:fd:9e:ad:18:04:69:2c:c7:5c:9f:25:82:84:6d:38"
      - run:
          name: checkout fb-publisher-deploy
          command: "GIT_SSH_COMMAND='ssh -v -i ~/.ssh/id_rsa_34fd9ead1804692cc75c9f2582846d38 -o \"IdentitiesOnly=yes\"' git clone git@github.com:ministryofjustice/fb-publisher-deploy.git ~/circle/git/fb-publisher-deploy"
      - run:
          name: persist git crypt key to disk
          command: "echo $ENCODED_GIT_CRYPT_KEY | base64 -d > /root/circle/git_crypt.key"
      - run:
          name: unlock git crypt
          command: "cd ~/circle/git/fb-publisher-deploy && git-crypt unlock /root/circle/git_crypt.key"
      - run:
          name: npm install
          command: 'npm install'
      - setup_remote_docker
      - run:
          name: build and push docker images
          command: './scripts/circleci_build.sh integration'
      - run:
          name: deploy to integration
          command: './scripts/circleci_deploy.sh integration $KUBE_TOKEN_INTEGRATION'
  build_and_deploy_to_live:
    working_directory: ~/circle/git/fb-publisher
    docker:
      - image: asmega/fb-builder:latest
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "34:fd:9e:ad:18:04:69:2c:c7:5c:9f:25:82:84:6d:38"
      - run:
          name: checkout fb-publisher-deploy
          command: "GIT_SSH_COMMAND='ssh -v -i ~/.ssh/id_rsa_34fd9ead1804692cc75c9f2582846d38 -o \"IdentitiesOnly=yes\"' git clone git@github.com:ministryofjustice/fb-publisher-deploy.git ~/circle/git/fb-publisher-deploy"
      - run:
          name: persist git crypt key to disk
          command: "echo $ENCODED_GIT_CRYPT_KEY | base64 -d > /root/circle/git_crypt.key"
      - run:
          name: unlock git crypt
          command: "cd ~/circle/git/fb-publisher-deploy && git-crypt unlock /root/circle/git_crypt.key"
      - run:
          name: npm install
          command: 'npm install'
      - setup_remote_docker
      - run:
          name: build and push docker images
          command: './scripts/circleci_build.sh live'
      - run:
          name: deploy to live
          command: './scripts/circleci_deploy.sh live $KUBE_TOKEN_LIVE'

workflows:
  version: 2
  test_and_build:
    jobs:
      - test
      - build_and_deploy_to_test:
          requires:
            - test
          # filters:
          #   branches:
          #     only: master
      - confirm_integration_deploy:
          type: approval
          requires:
            - build_and_deploy_to_test
      - build_and_deploy_to_integration:
          requires:
            - confirm_integration_deploy
      - confirm_live_deploy:
          type: approval
          requires:
            - build_and_deploy_to_integration
      - build_and_deploy_to_live:
          requires:
            - confirm_live_deploy
